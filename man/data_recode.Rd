% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_recode.R
\name{data_recode}
\alias{data_recode}
\alias{data_recode.numeric}
\alias{data_recode.data.frame}
\title{Recode data}
\usage{
data_recode(x, ...)

\method{data_recode}{numeric}(
  x,
  split = "median",
  n_groups = NULL,
  range = NULL,
  lowest = 1,
  ...
)

\method{data_recode}{data.frame}(
  x,
  split = "median",
  n_groups = NULL,
  range = NULL,
  lowest = 1,
  select = NULL,
  exclude = NULL,
  force = FALSE,
  append = FALSE,
  ...
)
}
\arguments{
\item{x}{A data frame, numeric vector or factor.}

\item{...}{not used.}

\item{split}{Character vector, indicating where to split variables, or
numeric values, indicating cut-off values. If character, may be one of
\code{"median"}, \code{"mean"}, \code{"quantile"}, \code{"equal_size"} or \code{"equal_range"}.}

\item{n_groups}{If \code{split} is \code{"quantile"} or \code{"equal_size"}, this defines
the number of requested groups (i.e. resulting number of levels or values)
for the recoded variable(s).}

\item{range}{If \code{split = "equal_range"}, this defines the range of values
that are recoded into a new value.}

\item{lowest}{Minimum value of the recoded variable.}

\item{select}{Character vector of column names. If \code{NULL} (the default), all
variables will be selected.}

\item{exclude}{Character vector of column names to be excluded from selection.}

\item{force}{Logical, if \code{TRUE}, forces recoding of factors as well.}

\item{append}{Logical or string. If \code{TRUE}, recoded variables get new
column names (with the suffix \code{"_r"}) and are appended (column bind) to \code{x},
thus returning both the original and the recoded variables. If \code{FALSE},
original variables in \code{x} will be overwritten by their recoded versions.
If a character value, recoded variables are appended with new column
names (using the defined suffix) to the original data frame.}
}
\description{
Recode data.
}
\examples{
set.seed(123)
x <- sample(1:10, size = 50, replace = TRUE)

table(x)

# by default, at median
table(data_recode(x))

# into 3 groups, based on distribution (quantiles)
table(data_recode(x, split = "quantile", n_groups = 3))

# into 3 groups, try to return similar group sizes
# (i.e. similar count for each value/level)
table(data_recode(x, split = "equal_size", n_groups = 3))

# into 3 groups, manual cut offs
table(data_recode(x, split = c(3, 5)))

set.seed(123)
x <- sample(1:100, size = 500, replace = TRUE)

# into 5 groups, try to return similar group sizes
table(data_recode(x, split = "equal_size", n_groups = 5))

# into 5 groups, try to return same range within groups
# i.e. 1-20, 21-40, 41-60, etc.
table(data_recode(x, split = "equal_range", range = 20))
}
